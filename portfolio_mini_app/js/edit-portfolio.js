import { trackEvent } from './script.js';

// --- –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
let currentPortfolio = null;
let allFundsCache = null; 
let isRecalculating = false;
let portfolioChartInstance = null;
const tg = window.Telegram.WebApp;
const API_URL_CALCULATE = `${window.location.origin}/api/calculate`;
const API_URL_FUNDS = `${window.location.origin}/api/funds`;

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
document.addEventListener('DOMContentLoaded', async () => {
    console.log("‚ñ∂Ô∏è DOMContentLoaded: –†–µ–¥–∞–∫—Ç–æ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.");
    trackEvent('page_view_edit_portfolio');
    tg.MainButton.hide();
    document.body.innerHTML = '<div class="loading-indicator">–ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä...</div>';

    try {
        const storedPortfolio = JSON.parse(localStorage.getItem('calculatedPortfolio'));
        if (!storedPortfolio) throw new Error("–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage.");
        console.log("‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ localStorage:", storedPortfolio);
        
        currentPortfolio = storedPortfolio;
        await fetchAllFunds(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∫—ç—à–∏—Ä—É–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ–Ω–¥—ã

        renderPage(); // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º HTML
        initializePageLogic(); // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Å—é –ª–æ–≥–∏–∫—É

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—É—á–∞–ª–∫—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞—Ö–æ–¥–µ
        if (!localStorage.getItem('hasSeenEditTutorial')) {
            console.log("‚ÑπÔ∏è –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ.");
            showTutorial();
        }

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞:", error);
        document.body.innerHTML = `<div class="error-message">${error.message}<br><a href="auto-selection.html">–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</a></div>`;
    }
});


// --- –§—É–Ω–∫—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏ UI ---

function renderPage() {
    console.log("üé® –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã (renderPage).");
    document.body.innerHTML = `
    <div class="container">
        <div class="edit-header">
            <h1 class="page-title">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è</h1>
            <p class="page-subtitle">–û—Ç—Ä–µ–≥—É–ª–∏—Ä—É–π—Ç–µ —Ä–∏—Å–∫ –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –∞–∫—Ç–∏–≤—ã, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –¥–ª—è —Å–µ–±—è.</p>
        </div>
        <details class="portfolio-card-toggle" id="portfolio-details" open>
            <summary class="portfolio-card-header">
                <div class="summary-main">
                    <h3 id="portfolio-strategy-title"></h3>
                    <div class="summary-details">
                        <span><span id="portfolio-amount"></span> ‚ÇΩ ‚Ä¢ <span id="portfolio-term"></span> –ª–µ—Ç</span>
                        <div class="guaranteed-return-summary">
                            –ì–∞—Ä–∞–Ω—Ç. –¥–æ—Ö–æ–¥: (–Ω–∏–∂–Ω—è—è –ø–ª–∞–Ω–∫–∞)<strong id="edit-guaranteed-return"></strong>
                        </div>
                    </div>
                </div>
                <span class="toggle-icon">‚ñº</span>
            </summary>
            <div class="portfolio-card-content">
                <h4>–ê–∫—Ç–∏–≤—ã –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ</h4>
                <div class="assets-list" id="assets-list"></div>
            </div>
        </details>
        <div class="risk-slider-container" id="risk-slider-section">
            <div class="slider-header">
                <label for="risk-slider">–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞</label>
                <span id="risk-level-label"></span>
            </div>
            <input type="range" id="risk-slider" min="0" max="100" value="50">
            <div class="slider-labels"><span>–ú–∏–Ω. —Ä–∏—Å–∫</span><span>–í—ã—Å. —Ä–∏—Å–∫</span></div>
        </div>
        <div class="chart-container">
            <div class="chart-wrapper"><canvas id="performance-chart"></canvas></div>
        </div>
        <div class="action-buttons">
            <button class="btn btn-secondary" id="reset-btn">–°–±—Ä–æ—Å–∏—Ç—å</button>
            <button class="btn btn-main" id="save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        </div>
    </div>
    <!-- –û–±—É—á–∞—é—â–∏–π Pop-up -->
    <div id="tutorial-popup" class="popup-overlay">
        <div class="popup-content">
            <button class="popup-close" id="popup-close-tutorial">&times;</button>
            <h3>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä!</h3>
            <p>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ç–æ–Ω–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å.</p>
            <ul class="tutorial-list">
                <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <strong>—Å–ª–∞–π–¥–µ—Ä —Ä–∏—Å–∫–∞</strong>, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∏ —Ä–∏—Å–∫ –ø–æ—Ä—Ç—Ñ–µ–ª—è.</li>
                <li>–í–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤—ã –º–æ–∂–µ—Ç–µ <strong>–∑–∞–º–µ–Ω–∏—Ç—å –æ–¥–∏–Ω –∞–∫—Ç–∏–≤ –Ω–∞ –¥—Ä—É–≥–æ–π</strong> –∏–∑ —Ç–æ–π –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</li>
            </ul>
            <button class="btn btn-main" id="start-tutorial-btn">–ü–æ–Ω—è—Ç–Ω–æ</button>
        </div>
    </div>
    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–º–µ–Ω—ã –∞–∫—Ç–∏–≤–æ–≤ -->
    <div id="replace-asset-popup" class="popup-overlay">
        <div class="popup-content">
            <button class="popup-close" id="close-replace-popup">&times;</button>
            <h3 id="replace-popup-title">–ó–∞–º–µ–Ω–∏—Ç—å –∞–∫—Ç–∏–≤</h3>
            <div id="replacement-options" class="replacement-options-list"></div>
        </div>
    </div>`;
    console.log("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–∞.");
}

function initializePageLogic() {
    console.log("‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (initializePageLogic).");
    displayPortfolioInfo();
    initializeChart();
    setupEventListeners();
}

function displayPortfolioInfo() {
    console.log("‚ÑπÔ∏è –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ä—Ç—Ñ–µ–ª–µ (displayPortfolioInfo).");
    document.getElementById('portfolio-amount').textContent = currentPortfolio.initial_amount.toLocaleString('ru-RU');
    document.getElementById('portfolio-term').textContent = currentPortfolio.term;
    
    // --- –ù–û–í–´–ô –ö–û–î ---
    const forecast = currentPortfolio.forecast;
    const guaranteedReturn = forecast.min[forecast.min.length - 1] - currentPortfolio.initial_amount;
    document.getElementById('edit-guaranteed-return').textContent = `+${guaranteedReturn.toLocaleString('ru-RU', { minimumFractionDigits: 0, maximumFractionDigits: 0 })} ‚ÇΩ`;
    // --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê ---

    document.getElementById('risk-slider').value = riskProfileToSliderValue(currentPortfolio.riskProfile);
    updateRiskUI();
    renderAssets();
}

function renderAssets() {
    console.log("üìù –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–æ–≤ (renderAssets).");
    const assetsListContainer = document.getElementById('assets-list');
    assetsListContainer.innerHTML = '';
    currentPortfolio.composition.forEach(asset => {
        const assetDiv = document.createElement('div');
        assetDiv.className = 'asset-item';
        assetDiv.innerHTML = `
            <div class="asset-info">
                <span class="asset-name">${asset.fund_name}</span>
                <span class="asset-percent">${asset.percentage.toFixed(0)}%</span>
            </div>
            <button class="replace-btn">–ó–∞–º–µ–Ω–∏—Ç—å</button>
        `;
        assetDiv.querySelector('.replace-btn').addEventListener('click', () => openReplacePopup(asset.fund_name));
        assetsListContainer.appendChild(assetDiv);
    });
}

function setupEventListeners() {
    console.log("üîó –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (setupEventListeners).");
    document.getElementById('risk-slider').addEventListener('input', handleRiskSliderChange);
    document.getElementById('reset-btn').addEventListener('click', handleReset);
    document.getElementById('save-btn').addEventListener('click', handleSave);

    const tutorialPopup = document.getElementById('tutorial-popup');
    tutorialPopup.addEventListener('click', e => {
        if (e.target === tutorialPopup || e.target.id === 'popup-close-tutorial' || e.target.id === 'start-tutorial-btn') {
            hideTutorial();
        }
    });

    const replacePopup = document.getElementById('replace-asset-popup');
    replacePopup.addEventListener('click', e => {
        if (e.target === replacePopup || e.target.id === 'close-replace-popup') {
            replacePopup.classList.remove('active');
        }
    });
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---

async function handleRiskSliderChange() {
    if (isRecalculating) return;
    updateRiskUI();
    const { riskProfile } = sliderValueToRiskProfile(document.getElementById('risk-slider').value);
    if (riskProfile !== currentPortfolio.riskProfile) {
        console.log(`üéöÔ∏è –°–ª–∞–π–¥–µ—Ä —Ä–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω. –ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å: ${riskProfile}`);
        trackEvent('risk_slider_used', { newRisk: riskProfile });
        await recalculatePortfolio({ riskProfile });
    }
}

async function handleReplaceAsset(newFundName, oldFundName) {
    console.log(`üîÑ –ó–∞–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–∞: —Å '${oldFundName}' –Ω–∞ '${newFundName}'`);
    trackEvent('asset_replaced', { from: oldFundName, to: newFundName });
    const newFundNames = currentPortfolio.composition.map(asset => 
        asset.fund_name === oldFundName ? newFundName : asset.fund_name
    );
    await recalculatePortfolio({ selected_funds: newFundNames });
    document.getElementById('replace-asset-popup').classList.remove('active');
}

function handleReset() {
    console.log("üîÑ –°–±—Ä–æ—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ.");
    trackEvent('click_reset_portfolio_edit');
    currentPortfolio = JSON.parse(localStorage.getItem('calculatedPortfolio'));
    displayPortfolioInfo();
    updateChart();
    tg.HapticFeedback.impactOccurred('light');
}

function handleSave() {
    console.log("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ portfolio.html.");
    trackEvent('click_save_portfolio_edit');
    localStorage.setItem('calculatedPortfolio', JSON.stringify(currentPortfolio));
    tg.HapticFeedback.notificationOccurred('success');
    window.location.href = 'portfolio.html';
}

// --- –õ–æ–≥–∏–∫–∞ API –∏ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞ ---

async function fetchAllFunds() {
    if (!allFundsCache) {
        console.log("üåê –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–æ–Ω–¥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞...");
        const response = await fetch(API_URL_FUNDS);
        if (!response.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–æ–Ω–¥–æ–≤.");
        allFundsCache = await response.json();
        console.log("‚úÖ –°–ø–∏—Å–æ–∫ —Ñ–æ–Ω–¥–æ–≤ –ø–æ–ª—É—á–µ–Ω –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω:", allFundsCache);
    }
}

async function recalculatePortfolio({ riskProfile = currentPortfolio.riskProfile, selected_funds = null }) {
    console.log("‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è...", { riskProfile, selected_funds });
    isRecalculating = true;
    document.querySelector('.container').style.opacity = '0.5';
    try {
        const response = await fetch(API_URL_CALCULATE, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                riskProfile,
                amount: currentPortfolio.initial_amount,
                term: currentPortfolio.term,
                selected_funds
            })
        });
        if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è.");
        currentPortfolio = await response.json();
        console.log("‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω:", currentPortfolio);
        displayPortfolioInfo();
        updateChart();
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞:", error);
        tg.showAlert(error.message);
    } finally {
        isRecalculating = false;
        document.querySelector('.container').style.opacity = '1';
    }
}

// --- –õ–æ–≥–∏–∫–∞ –ø–æ–ø–∞–ø–æ–≤ ---

function openReplacePopup(fundNameToReplace) {
    console.log(`‚ÜïÔ∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –¥–ª—è –∑–∞–º–µ–Ω—ã –∞–∫—Ç–∏–≤–∞ '${fundNameToReplace}'`);
    const popup = document.getElementById('replace-asset-popup');
    const optionsContainer = document.getElementById('replacement-options');
    const currentFund = allFundsCache.find(f => f.name === fundNameToReplace);
    if (!currentFund) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–æ–Ω–¥ '${fundNameToReplace}' –≤ –∫—ç—à–µ.`);
        return;
    }

    const replacementOptions = allFundsCache.filter(f => f.risk_level === currentFund.risk_level);
    
    document.getElementById('replace-popup-title').textContent = `–ó–∞–º–µ–Ω–∏—Ç—å "${fundNameToReplace}"`;
    optionsContainer.innerHTML = '';
    replacementOptions.forEach(fund => {
        const button = document.createElement('button');
        button.textContent = fund.name;
        button.className = 'replacement-option-btn';
        if (fund.name === fundNameToReplace) {
            button.classList.add('current');
            button.disabled = true;
        } else {
            button.onclick = () => handleReplaceAsset(fund.name, fundNameToReplace);
        }
        optionsContainer.appendChild(button);
    });
    popup.classList.add('active');
}

function showTutorial() {
    console.log(" TUTORIAL: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º.");
    document.getElementById('tutorial-popup').classList.add('active');
    document.getElementById('risk-slider-section').style.zIndex = '1001';
    document.getElementById('portfolio-details').style.zIndex = '1001';
}

function hideTutorial() {
    console.log(" TUTORIAL: –°–∫—Ä—ã–≤–∞–µ–º.");
    document.getElementById('tutorial-popup').classList.remove('active');
    document.getElementById('risk-slider-section').style.zIndex = '';
    document.getElementById('portfolio-details').style.zIndex = '';
    localStorage.setItem('hasSeenEditTutorial', 'true');
}

// --- –õ–æ–≥–∏–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –∏ —Ö–µ–ª–ø–µ—Ä—ã ---

function initializeChart() {
    console.log("üìà –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ (initializeChart).");
    const ctx = document.getElementById('performance-chart')?.getContext('2d');
    if (!ctx) {
        console.error("‚ùå Canvas –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }
    portfolioChartInstance = new Chart(ctx, {
        type: 'line', // <-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª–µ–Ω —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞
        data: {},
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: { beginAtZero: false, ticks: { callback: value => (value / 1000) + 'k ‚ÇΩ' }, grid: { color: 'rgba(255, 255, 255, 0.1)' } },
                x: { title: { display: true, text: '–ì–æ–¥—ã' }, grid: { color: 'rgba(255, 255, 255, 0.1)' } }
            },
            plugins: { legend: { display: false } }
        }
    });
    console.log("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –≥—Ä–∞—Ñ–∏–∫–∞ —Å–æ–∑–¥–∞–Ω.");
    updateChart();
}

function updateChart() {
    if (!portfolioChartInstance) {
        console.warn("‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –¥–æ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.");
        return;
    }
    console.log("üìä –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∞...", currentPortfolio.forecast);
    portfolioChartInstance.data = {
        labels: currentPortfolio.forecast.labels,
        datasets: [
            { label: '–ú–∞–∫—Å.', data: currentPortfolio.forecast.max, borderColor: '#28a745', tension: 0.2 },
            { label: '–°—Ä–µ–¥.', data: currentPortfolio.forecast.avg, borderColor: '#f8f9fa', tension: 0.2 },
            { label: '–ú–∏–Ω.', data: currentPortfolio.forecast.min, borderColor: '#dc3545', tension: 0.2 }
        ]
    };
    portfolioChartInstance.update();
    console.log("‚úÖ –ì—Ä–∞—Ñ–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω.");
}

function updateRiskUI() {
    const sliderValue = document.getElementById('risk-slider').value;
    const { label } = sliderValueToRiskProfile(sliderValue);
    document.getElementById('risk-level-label').textContent = label;
    document.getElementById('portfolio-strategy-title').textContent = `${label} –ø–æ—Ä—Ç—Ñ–µ–ª—å`;
}

function riskProfileToSliderValue(profile) {
    switch (profile) {
        case 'conservative': return 10;
        case 'moderate-conservative': return 30;
        case 'moderate': return 50;
        case 'moderate-aggressive': return 70;
        case 'aggressive': return 90;
        default: return 50;
    }
}

function sliderValueToRiskProfile(value) {
    if (value <= 20) return { riskProfile: 'conservative', label: '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π' };
    if (value <= 40) return { riskProfile: 'moderate-conservative', label: '–£–º–µ—Ä–µ–Ω–Ω–æ-–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π' };
    if (value <= 60) return { riskProfile: 'moderate', label: '–£–º–µ—Ä–µ–Ω–Ω—ã–π' };
    if (value <= 80) return { riskProfile: 'moderate-aggressive', label: '–£–º–µ—Ä–µ–Ω–Ω–æ-–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π' };
    return { riskProfile: 'aggressive', label: '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π' };
}

